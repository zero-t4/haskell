{-|
  Ниже определены функции mySum и goSum. Вызов goSum может выглядеть, к примеру, так:  goSum 15. Выберите верные утверждения, описывающие процесс вычисления подобного выражения.

  mySum acc 0 = acc
  mySum (result, ()) n = (mySum $! (result + n, ())) $ n - 1

  goSum = mySum (0, ())
-}

{-|
 *   В первом аргументе функции mySum не будут накапливаться отложенные вычисления, так как при рекурсивных вызовах используется оператор $!
 *   В первом аргументе функции mySum не будут накапливаться отложенные вычисления, так как он будет находиться в слабой головной нормальной форме.
 (*) В первом аргументе функции mySum будут накапливаться отложенные вычисления.
 *   Во втором аргументе функции mySum будут накапливаться отложенные вычисления из-за того, что его передача при рекурсивном вызове происходит с помощью оператора $\ а не $!
 (*) Во втором аргументе функции mySum не будут накапливаться отложенные вычисления, так как при каждом рекурсивном вызове происходит сопоставление с 0.
 *   Во втором аргументе функции mySum не будут накапливаться отложенные вычисления, так как минус - примитивная операция.
-}